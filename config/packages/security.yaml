# This file is part of «Birchbark Literacy from Medieval Rus» database.
#
# Copyright (c) Department of Linguistic and Literary Studies of the University of Padova
#
# «Birchbark Literacy from Medieval Rus» database is free software:
# you can redistribute it and/or modify it under the terms of the
# GNU General Public License as published by the Free Software Foundation, version 3.
#
# «Birchbark Literacy from Medieval Rus» database is distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
# the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# For the full copyright and license information, please view the LICENSE
# file that was distributed with this source code. If you have not received
# a copy of the GNU General Public License along with
# «Birchbark Literacy from Medieval Rus» database,
# see <http://www.gnu.org/licenses/>.

security:
  role_hierarchy:
    ROLE_ADMIN: [ ROLE_USER, ROLE_SONATA_ADMIN ]
    ROLE_EDITOR: [ ROLE_ADMIN ]
    ROLE_TEXT_EDITOR: [ ROLE_ADMIN ]
    ROLE_SUPER_ADMIN: [ ROLE_ADMIN, ROLE_EDITOR, ROLE_TEXT_EDITOR, ROLE_ALLOWED_TO_SWITCH ]
  encoders:
    App\Entity\Security\User:
      algorithm: auto
  providers:
    app_user_provider:
      entity:
        class: App\Entity\Security\User
        property: username
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    protected_api_login:
      pattern: ^/api/login$
      stateless: true
      anonymous: true
      json_login:
        check_path: /api/login
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
    protected_api:
      pattern: ^/api/v\d+/protected
      stateless: true
      guard:
        authenticators:
          - lexik_jwt_authentication.jwt_token_authenticator
    main:
      anonymous:
        lazy: true
      guard:
        authenticators:
          - App\Security\LoginFormAuthenticator
      logout:
        path: security__logout
        target: security__login
  access_control:
    - { path: ^/admin/security.*, role: [ ROLE_SUPER_ADMIN ] }
    - { path: ^/admin/document.*, role: [ ROLE_EDITOR ] }
    - { path: ^/admin/content.*, role: [ ROLE_EDITOR ] }
    - { path: ^/admin/book.*, role: [ ROLE_EDITOR ] }
    - { path: ^/admin/bibliography.*, role: [ ROLE_EDITOR ] }
    - { path: ^/admin/text.*, role: [ ROLE_TEXT_EDITOR ] }
    - { path: ^/admin.*, role: [ ROLE_ADMIN ] }
    - { path: ^/api/login$, role: [ IS_AUTHENTICATED_ANONYMOUSLY ] }
    - { path: ^/api/v\d+/protected.*, role: [ IS_AUTHENTICATED_FULLY ] }
    - { path: ^/api/v\d+/public.*, role: [ IS_AUTHENTICATED_ANONYMOUSLY ] }
    - { path: ^/.*, role: [ IS_AUTHENTICATED_ANONYMOUSLY ] }